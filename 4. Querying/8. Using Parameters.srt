1
00:00:01,000 --> 00:00:07,000
Now you may find that you'll want to have a parameter passed to your HQL query.

2
00:00:07,000 --> 00:00:11,000
This is pretty common and you can do this in HQL pretty easily.

3
00:00:11,000 --> 00:00:15,000
So for example, let's say we have 'select user from User as user'

4
00:00:15,000 --> 00:00:22,000
'where user.name' and we want to specify a name. So we might want to pass this in programmatically.

5
00:00:22,000 --> 00:00:26,000
We can use this :name to use a named parameter.

6
00:00:26,000 --> 00:00:29,000
And all we have to do is fill this in, in our query.

7
00:00:29,000 --> 00:00:33,000
So we can actually do this inside of this HQL editor

8
00:00:33,000 --> 00:00:37,000
if we go to this parameters here, you can see that I've already added a parameter

9
00:00:37,000 --> 00:00:39,000
and I've filled in the value of Joe.

10
00:00:39,000 --> 00:00:45,000
You just hit this plus parameter button and it will go ahead and detect the parameter that's in your query

11
00:00:45,000 --> 00:00:47,000
and you can just put in a value there.

12
00:00:47,000 --> 00:00:51,000
Once you've done that, if you run this now you can see we get just one result,

13
00:00:51,000 --> 00:00:54,000
we're just getting back Joe.

14
00:00:54,000 --> 00:00:58,000
So this is how you can test this out inside of the HQL Editor

15
00:00:58,000 --> 00:01:02,000
but you probably want to actually run this in some code as well.

16
00:01:02,000 --> 00:01:07,000
So to run this in code, all you have to do, is you can I've already filled this out,

17
00:01:07,000 --> 00:01:10,000
I already have our query in here.

18
00:01:10,000 --> 00:01:14,000
So we're just going to use our query. We're going to put our colon name inside of there

19
00:01:14,000 --> 00:01:16,000
and then I'm calling this setString.

20
00:01:16,000 --> 00:01:22,000
I'm actually just using some method chaining after createQuery I can just do '.setString'

21
00:01:22,000 --> 00:01:25,000
and we could actually chain whatever parameters we had.

22
00:01:25,000 --> 00:01:32,000
So maybe we had a bullion parameter or whatever else we had we can just add set and then the parameter name.

23
00:01:32,000 --> 00:01:33,000
We can even use objects.

24
00:01:33,000 --> 00:01:39,000
There's a setParameter that's sort of a generic version of setParameter that will let you set anything

25
00:01:39,000 --> 00:01:41,000
and we can even set an object.

26
00:01:41,000 --> 00:01:46,000
So for example, we could query based on matching a user.

27
00:01:46,000 --> 00:01:52,000
Instead of looking for user name we could just look to see if a user matches some user object that we created.

28
00:01:52,000 --> 00:01:57,000
But let's keep things simple and just run it like this, and we should expect that we're just going to get Joe.

29
00:01:57,000 --> 00:02:01,000
Now I have had some problems with this query editor.

30
00:02:01,000 --> 00:02:07,000
It does seem like if you open the query editor, even sometimes when you do this rebuild,

31
00:02:07,000 --> 00:02:12,000
or do this close configuration, it doesn't seem to let go of this session factory.

32
00:02:12,000 --> 00:02:17,000
So I've found that I do have to sometimes close out eclipse and then come back in.

33
00:02:17,000 --> 00:02:24,000
So I'm just going to do that real quick and then we'll take a look at running our actual application.

34
00:02:24,000 --> 00:02:27,000
Okay, so now I'm back here in eclipse and we're going to go ahead and try and run our program.

35
00:02:27,000 --> 00:02:30,000
So we're just going to go ahead and run this.

36
00:02:30,000 --> 00:02:35,000
And let's take a look at our output and you can see, after everything's happened, we just got back Joe.

37
00:02:35,000 --> 00:02:41,000
Because we were able to filters on the name where name was equal to Joe,

38
00:02:41,000 --> 00:02:45,000
and we passed in this name programmatically using setString.

39
00:02:45,000 --> 00:02:46,000
So that's how you use the name parameter.

40
00:02:46,000 --> 00:02:54,000
We can also use numerical parameters or positional parameters like you can in JDPC SQL queries.

41
00:02:54,000 --> 00:02:58,000
But I'd recommend against that because it's just not a very good practice

42
00:02:58,000 --> 00:03:03,000
because if you change your query around you could end up messing up the order of those

43
00:03:03,000 --> 00:03:04,000
and things can definitely break.

44
00:03:04,000 --> 00:03:09,000
When you use the name parameter you're going to be sure that it doesn't matter what order this comes

45
00:03:09,000 --> 00:03:18,000
so for example if you added an and clause, maybe you said if 'user.id' equals and you put id and,

46
00:03:18,000 --> 00:59:00,000
it's not going to mess things up whereas you use positional parameters, it will.

