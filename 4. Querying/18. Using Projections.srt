1
00:00:01,000 --> 00:00:05,000
So another useful thing for criteria is the ability to use projections.

2
00:00:05,000 --> 00:00:12,000
Now this is going to be equivalent to, basically, the select part of an HQL or SQL query

3
00:00:12,000 --> 00:00:14,000
except this is going to come at the end.

4
00:00:14,000 --> 00:00:20,000
So the easiest way to do this is to call setProjection and then we're going to use a projection.

5
00:00:20,000 --> 00:00:23,000
So we can do Projections, dot, and you can see there's all kinds of things

6
00:00:23,000 --> 00:00:29,000
like distinct, we've got rowCount, average count, and max, min.

7
00:00:29,000 --> 00:00:32,000
But we're just going to do something simple; we're going to do property,

8
00:00:32,000 --> 00:00:35,000
and we're just going to do the id property.

9
00:00:35,000 --> 00:00:39,000
So this will just give us the id, it's like saying select id.

10
00:00:39,000 --> 00:00:43,000
So if we run this you can see we get the id's 1 and 2.

11
00:00:43,000 --> 00:00:51,000
Now we can also add more than one projections by doing setProjection and then we can use Projection list.

12
00:00:51,000 --> 00:00:58,000
So if we do Projections.projectionList, this gives us a projection list which we can add projections to,

13
00:00:58,000 --> 00:01:08,000
so we can add projections, dot, and then here we can do our property, and we could put for example, name,

14
00:01:08,000 --> 00:01:20,000
and then we could chain this again and do add projections, dot, property id,

15
00:01:20,000 --> 00:01:22,000
then we'll close this.

16
00:01:22,000 --> 00:01:27,000
And if we run this criteria you can see we get Joe and Bob.

17
00:01:27,000 --> 00:01:32,000
Now normally we would get back id, we're just not seeing it in this tool

18
00:01:32,000 --> 00:01:36,000
because it doesn't show us the secondary projections.

19
00:01:36,000 --> 00:01:40,000
If we were to switch this order we would see id and not name

20
00:01:40,000 --> 00:01:47,000
but we are getting both of these back if we were to actually run this in our application.

21
00:01:47,000 --> 00:01:49,000
Let's go ahead and look at this in some code.

22
00:01:49,000 --> 00:01:53,000
I went ahead an took this criteria query that we created,

23
00:01:53,000 --> 00:01:57,000
I put it into our program so you can see it right here with our projections.

24
00:01:57,000 --> 00:02:01,000
And then what I'm doing is I'm calling list and notice what comes back here

25
00:02:01,000 --> 00:02:05,000
we actually get an array of objects.

26
00:02:05,000 --> 00:02:08,000
And then I'm going to loop through these array of objects,

27
00:02:08,000 --> 00:02:10,000
and then I'm going to loop through each object in that array.

28
00:02:10,000 --> 00:02:14,000
And so what we should expect are these two properties, the id and the name.

29
00:02:14,000 --> 00:02:17,000
We're only going to get back one result in this case

30
00:02:17,000 --> 00:02:21,000
so when we print this our we should see the ID followed by the name.

31
00:02:21,000 --> 00:02:25,000
Let's go ahead and run this.

32
00:02:25,000 --> 00:02:31,000
And now if you look at the console output you can see that we're getting 1 and then Joe.

33
00:02:31,000 --> 00:02:37,000
So when you do use these projections, you will have to deal with an object array

34
00:02:37,000 --> 00:59:00,000
unless you map this to some other object like we had done with the HQL queries earlier.

