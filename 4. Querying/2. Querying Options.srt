1
00:00:01,000 --> 00:00:05,000
There are actually a few options for querying in Hibernate that we can choose from

2
00:00:05,000 --> 00:00:10,000
and often you'll find that combing these different methods of querying by using the strengths of each,

3
00:00:10,000 --> 00:00:14,000
where it is best suited, is often the best approach.

4
00:00:14,000 --> 00:00:19,000
Our first option is to use the HQL or JPA QL API's.

5
00:00:19,000 --> 00:00:24,000
These API's allow us to query Hibernate using a syntax that's very similar to SQL.

6
00:00:24,000 --> 00:00:29,000
It's so similar that you might not even realize that there's any difference than regular SQL

7
00:00:29,000 --> 00:00:31,000
unless you look closely.

8
00:00:31,000 --> 00:00:37,000
In this course we'll be covering HQL as HQL and JPA QL are very similar

9
00:00:37,000 --> 00:00:44,000
but since HQL is Hibernate specific and JPA QL will work with any JPA compatible ORM.

10
00:00:44,000 --> 00:00:49,000
By learning HQL, you'll be pretty close to learning JPA QL as well.

11
00:00:49,000 --> 00:00:53,000
And since we are using the Hibernate API's already, and not JPA,

12
00:00:53,000 --> 00:00:57,000
there really isn't any advantage in using JPA QL.

13
00:00:57,000 --> 00:01:02,000
The second option, which we'll also cover in this module, is to use the Hibernate criteria API.

14
00:01:02,000 --> 00:01:06,000
This API is a much more object-oriented approach to querying Hibernate

15
00:01:06,000 --> 00:01:12,000
but it makes it much easier to programmatically write queries, as we'll discuss a little later.

16
00:01:12,000 --> 00:01:16,000
Finally, we can use the Hibernate API's to execute in native SQL

17
00:01:16,000 --> 00:01:21,000
but we won't be covering this querying option in this module since this is more of a special case

18
00:01:21,000 --> 00:01:23,000
and not a recommended approach.

19
00:01:23,000 --> 00:59:00,000
We will talk about native SQL in the next module, though, because occasionally it will be useful.

